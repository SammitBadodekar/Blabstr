generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model Users {
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  bgImage String? @db.Text
  email String @unique
  password String?
  about String?
  tag String? @unique
  posts Posts[] @relation("posts")
  savedPosts Posts[]  @relation("savedposts")
  likedPosts Posts[] @relation("likedposts")
  followers Follow[] @relation("followers")
  following Follow[] @relation("following")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Posts {
  id String @id @default(uuid()) 
  type String
  text String?
  image String? @db.Text
  video String? @db.Text
  likes Int?
  saves Int?
  user    Users    @relation("posts",fields: [UserEmail], references: [email])
  UserEmail   String
  savedby  Users?    @relation("savedposts",fields: [savedbyEmail], references: [email])
  savedbyEmail String?
  likedby  Users?    @relation("likedposts",fields: [likedbyEmail], references: [email])
  likedbyEmail String?
  comments Comments[]
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([ UserEmail], name: "post_id_index")
  @@index([ savedbyEmail], name: "savedpost_id_index")
  @@index([ likedbyEmail], name: "likedpost_id_index")
}

model Comments{
  id String @id @default(uuid())
  post Posts  @relation(fields: [postId], references: [id])
  postId String 
  @@index([postId], name: "post_id_index")
  replies Replies[]
   createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Replies{
  id String @id @default(uuid())
  comment Comments  @relation(fields: [commentId], references: [id])
 commentId String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 @@index([commentId], name: "post_id_index")
}

model Follow{
  id String @id @default(uuid())
  followedby Users @relation("followers",fields: [followedbyEmail] , references: [email])
  followedbyEmail String
  followedTo Users @relation("following",fields: [followedToEmail] , references: [email])
  followedToEmail String
  @@index([followedbyEmail], name: "followers")
  @@index([followedToEmail], name: "following")
}